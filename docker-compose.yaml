version: "3.8"

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_db_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile
    image: payment-recon-build:2.6.3
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: "/opt/airflow:/home/airflow/.local/lib/python3.7/site-packages"
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      SPARK_HOME: /opt/spark
      PATH: "/home/airflow/.local/bin:${SPARK_HOME}/bin:${JAVA_HOME}/bin:${PATH}"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    user: "airflow"
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "airflow db init &&
               airflow db upgrade &&
               airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin"

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: payment-recon-build:2.6.3
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: "/opt/airflow:/home/airflow/.local/lib/python3.7/site-packages"
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      SPARK_HOME: /opt/spark
      PATH: "/home/airflow/.local/bin:${SPARK_HOME}/bin:${JAVA_HOME}/bin:${PATH}"
      AIRFLOW__METRICS__STATSD_ON: "True"
      AIRFLOW__METRICS__STATSD_HOST: "statsd-exporter"
      AIRFLOW__METRICS__STATSD_PORT: "8125"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    user: "airflow"
    depends_on:
      - airflow-init
    command: scheduler

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: payment-recon-build:2.6.3
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: "/opt/airflow:/home/airflow/.local/lib/python3.7/site-packages"
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      SPARK_HOME: /opt/spark
      PATH: "/home/airflow/.local/bin:${SPARK_HOME}/bin:${JAVA_HOME}/bin:${PATH}"
      AIRFLOW__METRICS__STATSD_ON: "True"
      AIRFLOW__METRICS__STATSD_HOST: "statsd-exporter"
      AIRFLOW__METRICS__STATSD_PORT: "8125"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    user: "airflow"
    depends_on:
      - airflow-init
    command: webserver
    ports:
      - "8081:8080"  # Expose Airflow on host's 8081 instead of 8080

  statsd-exporter:
    image: prom/statsd-exporter:latest
    ports:
      - "9102:9102"
    environment:
      - STATSD_ADDRESS=:8125

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"

volumes:
  postgres_db_volume:
